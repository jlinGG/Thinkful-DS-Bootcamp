{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Success!\n"
     ]
    }
   ],
   "source": [
    "# Importing in each cell because of the kernel restarts.\n",
    "import scrapy\n",
    "from scrapy.crawler import CrawlerProcess\n",
    "\n",
    "\n",
    "class NZSpider(scrapy.Spider):\n",
    "    # Naming the spider is important if you are running more than one spider of\n",
    "    # this class simultaneously.\n",
    "    name = \"NZS\"\n",
    "    \n",
    "    # URL(s) to start with.\n",
    "    start_urls = [\n",
    "        'https://app.companiesoffice.govt.nz/companies/app/ui/pages/companies/6236487',\n",
    "    ]\n",
    "\n",
    "    # Use XPath to parse the response we get.\n",
    "    def parse(self, response):\n",
    "        with open('companypage.html', 'wb') as f:\n",
    "            f.write(response.body)\n",
    "        \n",
    "        # for row???\n",
    "        for row in CompanySummary Box:\n",
    "            \n",
    "            yield {\n",
    "                ConstitutionFiled = response.xpath('x_pathlink').extract()\n",
    "                IncorporationDate = response.xpath('x_pathlink').extract()\n",
    "                CompanyStatus = response.xpath('x_pathlink').extract()\n",
    "                ARFiling = response.xpath('x_pathlink').extract()\n",
    "                EntityType = response.xpath('x_pathlink').extract()\n",
    "                NZBusinessNumber = response.xpath('x_pathlink').extract()\n",
    "                CompanyNumber = response.xpath('x_pathlink').extract()\n",
    "            }\n",
    "        \n",
    "        for director in Directors:\n",
    "            AppointmentDate = response.xpath('x_pathlink').extract()\n",
    "            Name = response.xpath('x_pathlink').extract()\n",
    "            Address = response.xpath('x_pathlink').extract()\n",
    "            \n",
    "        for shareholder in Shareholders:\n",
    "            ShareholderPortion = response.xpath('x_pathlink').extract()\n",
    "            Address = response.xpath('x_pathlink').extract()\n",
    "            ShareNumber = response.xpath('x_pathlink').extract()\n",
    "            Name = response.xpath('x_pathlink').extract()\n",
    "            \n",
    "        #How to move on to next company??\n",
    "\n",
    "# Tell the script how to run the crawler by passing in settings.\n",
    "process = CrawlerProcess({\n",
    "    'FEED_FORMAT': 'json',         # Store data in JSON format.\n",
    "    'FEED_URI': 'NZStest2.json',  # Name our storage file.\n",
    "    'LOG_ENABLED': False           # Turn off logging for now.\n",
    "})\n",
    "\n",
    "# Start the crawler with our spider.\n",
    "process.crawl(NZSpider)\n",
    "process.start()\n",
    "print('Success!')\n",
    "ConstitutionFiled = response.xpath('x_pathlink').extract()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
